// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Server {
  id        String    @id
  name      String
  channels  Channel[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Channel {
  id        String    @id
  serverId   String
  server     Server     @relation(fields: [serverId], references: [id])
  name      String
  columns   Column[]
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Column {
  id        String      @id @default(cuid())
  channelId String
  channel   Channel     @relation(fields: [channelId], references: [id])
  title     String
  type      MessageType @default(QUESTION)
  messages  Message[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Message {
  id        String      @id
  channelId String
  channel   Channel     @relation(fields: [channelId], references: [id])
  columnId  String
  column    Column      @relation(fields: [columnId], references: [id])
  authorId  String
  content   String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  type      MessageType @default(QUESTION)
  categories String[]
  resolved  Boolean     @default(false)
  solution  String?
  reactions Reaction[]
}

model Reaction {
  id        String   @id @default(cuid())
  messageId String
  message   Message  @relation(fields: [messageId], references: [id])
  emoji     String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([messageId, emoji, userId])
}

model User {
  id         String   @id
  username   String
  globalName String?
  avatar     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum MessageType {
  QUESTION
  FEEDBACK
  FEATURE_REQUEST
}

